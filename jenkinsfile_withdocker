pipeline {
    agent any
    environment{
        PATH = "${tool name: 'NodeJS', type: 'jenkins.plugins.nodejs.tools.NodeJSInstallation'}/bin:${env.PATH}"
    }
    stages {
        stage('Clean workspace') {
            steps {
                script {
                    deleteDir()
                }
            }
        }
        stage('Checkout') {
            steps {
                script {
                    // Start the SSH agent
                    sshagent(credentials: ['c78c0348-18f0-4d31-ae84-4467c1180f2a']) {
                        // Manually add the host key to known hosts
                        sh 'ssh-keyscan github.com >> ~/.ssh/known_hosts'
                        // Run your Git commands here
                        sh 'git clone git@github.com:rehmanjaffar/nodeApp.git'
                    }
                }
            }
        }
        stage('Tag Image') { 
            steps { 
                script { 
                    def buildNumber = env.BUILD_NUMBER 
                    def imageName = "node-app:${buildNumber}" 
                    // Build and tag the Docker image with the build number 
                    sh "docker build -t ${imageName} -f nodeApp/dockerfile ." 
                   docker.withRegistry('https://rehman.docker.com', '34bf19fa-5307-4582-9ccb-e085f6b57957') { 
                        // Push the tagged image to your local registry 
                        sh "docker tag ${imageName} rehman.docker.com/${imageName}" 
                        sh "docker push rehman.docker.com/${imageName}" 
                    } 
                } 
            } 
        } 
        stage('Deploy with Docker Compose') {
            steps {
                script {
                    // Bring down the previous deployment
                    sh "docker-compose -f nodeApp/docker-compose.yml down -v"

                    // Update the docker-compose.yml file with the new image tag
                    def buildNumber = env.BUILD_NUMBER 

                    sh "sed -i 's/image: node-app:.*/image: node-app:${buildNumber}/' nodeApp/docker-compose.yml"
                    // Bring up the latest deployment
                    sh "docker-compose -f nodeApp/docker-compose.yml up -d"
                }
            }
        }
    }
}
